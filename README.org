* Modelling and prediction for TEMP-LISP

This program is designed for interactive use in emacs.

It handles multi-class classification and regression workflows for predicting multiple crop
traits from time series remote sensing multi-spectral imagery.

It implements workflows for data processing, model training, prediction and
evaluation using the EO-learn library, LightGBM model and the TSAI Model library, as well as FastAI Library.

Evaluation is done with sci-kit learn. The visualizations and metrics are meant only for internal validation of the
data processing. Formal metrics should be made from the exported final prediction.

** Process

1. Data preparation:
   - Loads prepared drone imagery and field segmentation data
   - Creates EOPatches from drone imagery and metadata
   - Samples data for training

2. Model training:
   - Trains GBM and TSAI models for regression and classification
   - Evaluates models on holdout test set

3. Prediction:
   - Applies trained models to validation area
   - Visualizes and quantifies predictions

4. Export:
   - Exports prediction maps as GeoTIFFs

** Data Flow

1. Input Files:
   - Drone imagery tiffs (DATA_RASTERS)
   - Area of interest polygons (DATA_AREAS)
   - Field identity polygons (DATA_IDS)
   - Trait observations table (DATA_TABLE)

2. Data Preparation:
   - Create EOPatches from Drone imagery
   - Add metadata (timestamps, masks) to EOPatches
   - Sample data from EOPatches

3. Model Training:
   - Split sampled data into train/test sets
   - Train GBM and TSAI models (classification and/or regression)
   - Evaluate models on test set

4. Prediction:
   - Load validation area EOPatches
   - Apply trained models to predict trait
   - Store predictions in EOPatches

5. Evaluation:
   - Calculate metrics comparing predictions to ground truth
   - Generate visualizations of predictions and errors

6. Export:
   - Extract predictions from EOPatches
   - Merge predictions into single raster
   - Export as GeoTIFF

Output Files:
- Predicted trait GeoTIFF (RESULTS_DIR)
- Model files (MODELS_DIR)

** Block Diagram

```mermaid
graph TD
    subgraph Input_Files
        A1[Drone imagery tiffs<br>DATA_RASTERS]
        A2[Area of interest polygons<br>DATA_AREAS]
        A3[Field identity polygons<br>DATA_IDS]
        A4[Trait observations table<br>DATA_TABLE]
    end

    subgraph Data_Preparation
        B1[Create EOPatches]
        B2[Add metadata<br>timestamps, masks]
        B3[Sample data]
    end

    subgraph Model_Training
        C1[Split train/test]
        C2[Train GBM models]
        C3[Train TSAI models]
        C4[Evaluate on test set]
    end

    subgraph Prediction
        D1[Load validation EOPatches]
        D2[Apply models]
        D3[Store predictions]
    end

    subgraph Evaluation
        E1[Calculate metrics]
        E2[Generate visualizations]
    end

    subgraph Export
        F1[Extract predictions]
        F2[Merge predictions]
        F3[Export GeoTIFF]
    end

    A1 --> B1
    A2 --> B1
    A2 --> B2
    A3 --> B2
    A4 --> B3
    B1 --> B2
    B2 --> B3
    B3 --> C1
    C1 --> C2
    C1 --> C3
    C2 --> C4
    C3 --> C4
    C4 --> D2
    A2 --> D1
    D1 --> D2
    D2 --> D3
    D3 --> E1
    D3 --> E2
    A4 --> E1
    D3 --> F1
    F1 --> F2
    F2 --> F3

    subgraph Output_Files
        G1[Predicted trait GeoTIFF<br>RESULTS_DIR]
        G2[Model files<br>MODELS_DIR]
        G3[Evaluation metrics/plots<br>RESULTS_DIR]
    end

    F3 --> G1
    C2 --> G2
    C3 --> G2
    E1 --> G3
    E2 --> G3
```
